#pragma once
#include <string>
#include <deque>
#include <vector>
#include <cmath>
#include <algorithm>
#include "fileRead.h"
#include "Fft842.h"
#include <complex>

using namespace std;

class Convolution
{
public:

	/**
	 * \brief
	 * \param inFile input file containing x[n] data
	 * \param outFile desired output file for y[n]
	 */
	Convolution(const string& inFile, const string& outFile)
		: file(inFile, outFile)
	{ }

	/**
	 * \brief The filter system for performing filtering in the time domain
	 */
	void Filter()
	{
		printf("performing normal filter\n");
		xBuff.clear();
		xBuff.resize(FILTER_SIZE, complx { 0.0f, 0.0f });
		file.goToStartOfData();
		while (!file.eof)
		{
			file.WriteValue(Filter(file.GetValue()));
		}
	}

	/**
	 * \brief The system to convolve the given system by using the fft using overlap-save
	 */
	void FastConvolution()
	{
		const auto nFft = static_cast<unsigned int>(pow(2, 9));
		auto eofXIndex = nFft;
		// ReSharper disable once CppInconsistentNaming
		vector<complx> H(nFft);
		vector<complx> yBuff(nFft, complx { 0.0f, 0.0f });
		vector<complx> lastXValues(FILTER_SIZE, complx { 0.0f, 0.0f });

		printf("Performing fast convolution\n");
		xBuff.clear();
		xBuff.resize(nFft, complx { 0.0f, 0.0f });
		file.goToStartOfData();

		//Create the fft of the FIR filter
		for (auto i = 0u; i < nFft; i++)
		{
			//fill with 0's if the end of the filter has been reached
			H[i] = complx { i < FILTER_SIZE ? static_cast<float>(FIRValues[i]) : 0.0f, 0.0f };
		}
		fft842(0, nFft, &H[0]);

		//Overlap-save
		while (!file.eof)
		{
			//copy over the last FILTER_SIZE values from the end of xBuff into the beginning
			copy(lastXValues.begin(), lastXValues.end(), xBuff.begin());

			//Fill xBuff with nFft items. If eof is reached, fill the rest of xBuff with zeros
			for (auto i = FILTER_SIZE; !file.eof && i < xBuff.size(); i++)
			{
				xBuff[i] = complx { file.GetValue(),0.0f };
				if (file.eof) eofXIndex = i;
			}
			//fill end of xBuff with zeros if required
			for (auto it = xBuff.begin() + eofXIndex; it != xBuff.end(); ++it)
			{
				it->re = 0;
			}
			//store last FILTER_SIZE x values before the fft
			copy(xBuff.end() - FILTER_SIZE, xBuff.end(), lastXValues.begin());

			//perform fft of x
			fft842(0, nFft, &xBuff[0]);

			//multiply X*H. All containers are the same size
			for (auto xVal = xBuff.begin(), hVal = H.begin(), yVal = yBuff.begin(); xVal != xBuff.end(); ++xVal, ++hVal, ++yVal)
			{
				*yVal = complx { xVal->re*hVal->re - xVal->im*hVal->im, xVal->re*hVal->im + xVal->im*hVal->re };
			}

			fft842(1, nFft, &yBuff[0]);

			//write yBuff out to file, but do not include the first FILTER_SIZE values
			for (auto yVal = yBuff.begin() + FILTER_SIZE; yVal != yBuff.end(); ++yVal)
			{
				file.WriteValue(yVal->re);
			}
		}
	}


private:

	FileRead file;
	const unsigned int FILTER_SIZE = 257;
	vector<complx> xBuff;

	/**
	 * \brief Shift the given array right by one and put 0 at x[0]
	 * \param x array to shift
	 */
	static void ShiftXBuffRight(vector<complx> &x)
	{
		for (auto it = x.rbegin(); it != x.rend() - 1; ++it)
		{
			*it = *(it + 1);
		}
		x[0] = complx { 0.0f, 0.0f };
	}

	/**
	 * \brief filters the given x value through a FIR filter.
	 * \param x input x'[n] value
	 * \return output y'[n] value
	 */
	float Filter(const float x)
	{
		auto y = 0.0;
		// Step 1. Shift xbuff and put x into xbuff[0]
		xBuff.erase(xBuff.end() - 1);
		xBuff.insert(xBuff.begin(), complx { x,0.0f });
		// Step 3. Accumulate filter output into y
		for (auto i = 0u; i < FILTER_SIZE; i++)
		{
			y += FIRValues[i] * xBuff[i].re;
		}

		return static_cast<float>(y);
	}

	// ReSharper disable once CppInconsistentNaming
	/**
	 * \brief LPF: \n
	 * pass band 300 Hz\n
	 * stop band 400 Hz\n 
	 * sampling rate 11.025 kHz\n
	 * order 256
	 */
	const vector<double> FIRValues =
	{
		 0.002654627105378481663477963081732013961,
		-0.000436943460553034803382776996016900739,
		-0.000440137350257065217747770580203336976,
		-0.000464247574957186287785554368312546103,
		-0.000503430101313665488184379004366064692,
		-0.000552514301783621464801699030289228176,
		-0.000605350091652724739584023883054442194,
		-0.000656525993872234328585513196685496951,
		-0.000700275932394112967348254183974631815,
		-0.000731543742679424116234776498401970457,
		-0.000745494135008627082164545107900721632,
		-0.000738415472688602747552977234590798616,
		-0.000707171700999772046697389171754366544,
		-0.000650115787032198790169890134649222091,
		-0.000566378380933363822710702173424124339,
		-0.000456885604418179596276222698136848521,
		-0.000323411421760975059582626789378423382,
		-0.000169644559107974291509504660702134515,
		 0.000000063277357164683840860447731034577,
		 0.000179608149515695687684427306329837393,
		 0.00036264491240859265518831078267680823 ,
		 0.000541439857751506220182036166477246297,
		 0.000708596056248757852173703053466624624,
		 0.000855855330142943457501225612560347145,
		 0.000976045041099184748460693139548993713,
		 0.001061796309276675934554767799511409976,
		 0.001107660999409547418828592135753297043,
		 0.001108596508116859022038958038081091217,
		 0.001062203328520220637840032473775409017,
		 0.000966836742463322699504824075944497963,
		 0.000824046224680538758923520337162926808,
		 0.000636188183016653794644990060902500772,
		 0.000409192670578718430043213549751612845,
		 0.000149422534516477568044753865272866733,
		-0.000133080826717978410386744592130980891,
		-0.000428817657242049423988589085254830024,
		-0.000724702974786418604481730287858454176,
		-0.001009741528953432684531654750514917396,
		-0.001269250977584756396795984123571088276,
		-0.001492906332069726107678042659188122343,
		-0.001665823338927402506165487139355718682,
		-0.001782210018152996034226931421073913953,
		-0.001828930650919881458968396792386101879,
		-0.001799929520123711703880053924820003886,
		-0.001699263653892346204524188557627439877,
		-0.00151781128767961991272994470847379489 ,
		-0.001262189406055957887481389079198379477,
		-0.000937200720572627403101573229093901318,
		-0.00055524412745752065121568330496870658 ,
		-0.000127101433044730840332681154336569307,
		 0.000330560431421527171295254854399559008,
		 0.000801753873747574502019175302081066548,
		 0.001266506683216460545093884348943902296,
		 0.001705972720871101354009335970829397411,
		 0.002099376689724742183623673597026026982,
		 0.002428328675212964096741252717492898228,
		 0.002674612354177695675017112364457716467,
		 0.002823860155539193155654897893214183568,
		 0.002863670924081222583790218294552687439,
		 0.002786744290161200909156091753970940772,
		 0.002589064435361261660301090969937831687,
		 0.002272551090040173926015709682246779266,
		 0.001843099415594739781329436389967213472,
		 0.00131269751797262836968960275640938562 ,
		 0.00069716622668382734803044220583956303 ,
		 0.000017733837995297554432144390701431291,
		-0.000701523121063379819124794511964182675,
		-0.001432575475574714759380290374224387051,
		-0.002146238419032868698782534622182538442,
		-0.002811475944390025294428170354876783676,
		-0.003398364650837149003592685403418727219,
		-0.00387767171055150659114696409801581467 ,
		-0.004223801613222531031732742690110171679,
		-0.004414369593767610185086613938665323076,
		-0.004432923389758453014408701164938975126,
		-0.004268251725103982749387476758329285076,
		-0.003916825587074037468005016648930904921,
		-0.003381617552027952385701459192546280974,
		-0.002674276879509234709081377800998780003,
		-0.001813081146819911070727782131939420651,
		-0.000824924703866663513139589891665082177,
		 0.000258111719012993454276660987289915283,
		 0.001396370840719288099890382781609332596,
		 0.002548283175683842619041463706253125565,
		 0.003664897360409253516261296468314867525,
		 0.004701062820052614998900253340252675116,
		 0.005607787008414569750180955765017642989,
		 0.006339577876716574224291722572388607659,
		 0.006855635724063572668252053432524917298,
		 0.007121073487740717071481366673424417968,
		 0.007108119026033159551514195584331901046,
		 0.00679785174228192141249182967044362158 ,
		 0.006182748980147069473023435648428858258,
		 0.005266271009929868011922859949436315219,
		 0.004064252235516812618298931880644886405,
		 0.002604396951166781330050392639918754867,
		 0.000926382610162865445524449370395814185,
		-0.00091892820958440512343207151602086924 ,
		-0.002870604051058486989866924687930804794,
		-0.004858952410674247796018576650567410979,
		-0.006807749742764706603337376833451344282,
		-0.008636075199366967380942838872215361334,
		-0.010261303034516729149050462410741602071,
		-0.011601217165929302022053803966628038324,
		-0.012577329192275882654983298891693266341,
		-0.013117001645648367763596908730505674612,
		-0.013156716446379281351686252321542269783,
		-0.012643912983127208321532108925566717517,
		-0.011539815452154987204802516487234242959,
		-0.009820619083431779763881941391900909366,
		-0.007479521965331280448918693792847989243,
		-0.004526966930033569577740415468269929988,
		-0.000991698133893512872097386612324498856,
		 0.003080104331140693599971891458721984236,
		 0.007624809422452442572715192170562659157,
		 0.012563415306625502418369499935124622425,
		 0.017802549154801221298338731457988615148,
		 0.023237703113024678336362427444328204729,
		 0.028754991422148733215546911878846003674,
		 0.034235226077427606539149707032265723683,
		 0.039556038607280685770462014261283911765,
		 0.044596419623497647599652538019654457457,
		 0.049238923244832213943489307439449476078,
		 0.053374283049447510118845627857808722183,
		 0.056903487648416982425114696297896443866,
		 0.059741738389990368951476540360090439208,
		 0.06182050257834979800630748059120378457 ,
		 0.063088041955675230876288139825192047283,
		 0.063514237627420741527650704938423587009,
		 0.063088041955675230876288139825192047283,
		 0.06182050257834979800630748059120378457 ,
		 0.059741738389990368951476540360090439208,
		 0.056903487648416982425114696297896443866,
		 0.053374283049447510118845627857808722183,
		 0.049238923244832213943489307439449476078,
		 0.044596419623497647599652538019654457457,
		 0.039556038607280685770462014261283911765,
		 0.034235226077427606539149707032265723683,
		 0.028754991422148733215546911878846003674,
		 0.023237703113024678336362427444328204729,
		 0.017802549154801221298338731457988615148,
		 0.012563415306625502418369499935124622425,
		 0.007624809422452442572715192170562659157,
		 0.003080104331140693599971891458721984236,
		-0.000991698133893512872097386612324498856,
		-0.004526966930033569577740415468269929988,
		-0.007479521965331280448918693792847989243,
		-0.009820619083431779763881941391900909366,
		-0.011539815452154987204802516487234242959,
		-0.012643912983127208321532108925566717517,
		-0.013156716446379281351686252321542269783,
		-0.013117001645648367763596908730505674612,
		-0.012577329192275882654983298891693266341,
		-0.011601217165929302022053803966628038324,
		-0.010261303034516729149050462410741602071,
		-0.008636075199366967380942838872215361334,
		-0.006807749742764706603337376833451344282,
		-0.004858952410674247796018576650567410979,
		-0.002870604051058486989866924687930804794,
		-0.00091892820958440512343207151602086924 ,
		 0.000926382610162865445524449370395814185,
		 0.002604396951166781330050392639918754867,
		 0.004064252235516812618298931880644886405,
		 0.005266271009929868011922859949436315219,
		 0.006182748980147069473023435648428858258,
		 0.00679785174228192141249182967044362158 ,
		 0.007108119026033159551514195584331901046,
		 0.007121073487740717071481366673424417968,
		 0.006855635724063572668252053432524917298,
		 0.006339577876716574224291722572388607659,
		 0.005607787008414569750180955765017642989,
		 0.004701062820052614998900253340252675116,
		 0.003664897360409253516261296468314867525,
		 0.002548283175683842619041463706253125565,
		 0.001396370840719288099890382781609332596,
		 0.000258111719012993454276660987289915283,
		-0.000824924703866663513139589891665082177,
		-0.001813081146819911070727782131939420651,
		-0.002674276879509234709081377800998780003,
		-0.003381617552027952385701459192546280974,
		-0.003916825587074037468005016648930904921,
		-0.004268251725103982749387476758329285076,
		-0.004432923389758453014408701164938975126,
		-0.004414369593767610185086613938665323076,
		-0.004223801613222531031732742690110171679,
		-0.00387767171055150659114696409801581467 ,
		-0.003398364650837149003592685403418727219,
		-0.002811475944390025294428170354876783676,
		-0.002146238419032868698782534622182538442,
		-0.001432575475574714759380290374224387051,
		-0.000701523121063379819124794511964182675,
		 0.000017733837995297554432144390701431291,
		 0.00069716622668382734803044220583956303 ,
		 0.00131269751797262836968960275640938562 ,
		 0.001843099415594739781329436389967213472,
		 0.002272551090040173926015709682246779266,
		 0.002589064435361261660301090969937831687,
		 0.002786744290161200909156091753970940772,
		 0.002863670924081222583790218294552687439,
		 0.002823860155539193155654897893214183568,
		 0.002674612354177695675017112364457716467,
		 0.002428328675212964096741252717492898228,
		 0.002099376689724742183623673597026026982,
		 0.001705972720871101354009335970829397411,
		 0.001266506683216460545093884348943902296,
		 0.000801753873747574502019175302081066548,
		 0.000330560431421527171295254854399559008,
		-0.000127101433044730840332681154336569307,
		-0.00055524412745752065121568330496870658 ,
		-0.000937200720572627403101573229093901318,
		-0.001262189406055957887481389079198379477,
		-0.00151781128767961991272994470847379489 ,
		-0.001699263653892346204524188557627439877,
		-0.001799929520123711703880053924820003886,
		-0.001828930650919881458968396792386101879,
		-0.001782210018152996034226931421073913953,
		-0.001665823338927402506165487139355718682,
		-0.001492906332069726107678042659188122343,
		-0.001269250977584756396795984123571088276,
		-0.001009741528953432684531654750514917396,
		-0.000724702974786418604481730287858454176,
		-0.000428817657242049423988589085254830024,
		-0.000133080826717978410386744592130980891,
		 0.000149422534516477568044753865272866733,
		 0.000409192670578718430043213549751612845,
		 0.000636188183016653794644990060902500772,
		 0.000824046224680538758923520337162926808,
		 0.000966836742463322699504824075944497963,
		 0.001062203328520220637840032473775409017,
		 0.001108596508116859022038958038081091217,
		 0.001107660999409547418828592135753297043,
		 0.001061796309276675934554767799511409976,
		 0.000976045041099184748460693139548993713,
		 0.000855855330142943457501225612560347145,
		 0.000708596056248757852173703053466624624,
		 0.000541439857751506220182036166477246297,
		 0.00036264491240859265518831078267680823 ,
		 0.000179608149515695687684427306329837393,
		 0.000000063277357164683840860447731034577,
		-0.000169644559107974291509504660702134515,
		-0.000323411421760975059582626789378423382,
		-0.000456885604418179596276222698136848521,
		-0.000566378380933363822710702173424124339,
		-0.000650115787032198790169890134649222091,
		-0.000707171700999772046697389171754366544,
		-0.000738415472688602747552977234590798616,
		-0.000745494135008627082164545107900721632,
		-0.000731543742679424116234776498401970457,
		-0.000700275932394112967348254183974631815,
		-0.000656525993872234328585513196685496951,
		-0.000605350091652724739584023883054442194,
		-0.000552514301783621464801699030289228176,
		-0.000503430101313665488184379004366064692,
		-0.000464247574957186287785554368312546103,
		-0.000440137350257065217747770580203336976,
		-0.000436943460553034803382776996016900739,
		 0.002654627105378481663477963081732013961
	};

};
